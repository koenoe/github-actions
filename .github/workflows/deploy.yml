name: deploy

env:
  AWS_BUCKET: koenoe
  AWS_DEFAULT_REGION: eu-west-3
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

on:
  push:
    tags:
      - "v*"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Get the version
        run: |
          echo ::set-env name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Deploy for new users
        run: |
          aws s3 cp s3://$AWS_BUCKET/builds/$VERSION/TIDAL.exe s3://$AWS_BUCKET/desktop/TIDALSetup.exe --cache-control max-age=3600
          aws s3 cp s3://$AWS_BUCKET/builds/$VERSION/TIDAL.dmg s3://$AWS_BUCKET/desktop/TIDAL.dmg --cache-control max-age=3600

      - name: Deploy for auto update
        run: |
          aws s3 cp s3://$AWS_BUCKET/builds/$VERSION s3://$AWS_BUCKET/desktop/windows --exclude "*" --include "*.nupkg" --recursive
          aws s3 cp s3://$AWS_BUCKET/builds/$VERSION/TIDAL.zip s3://$AWS_BUCKET/desktop/osx/TIDAL.$VERSION.zip
          aws s3 cp s3://$AWS_BUCKET/builds/$VERSION/RELEASES s3://$AWS_BUCKET/desktop/windows/RELEASES --cache-control max-age=300
          aws s3 cp s3://$AWS_BUCKET/builds/$VERSION/version.json s3://$AWS_BUCKET/desktop/osx/version.json --cache-control max-age=300
